name: Dependency and Security Automation

on:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays
  workflow_dispatch:  # Manual trigger

jobs:
  bandit-sast:
    name: 🐍 Python SAST (Bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit
        run: bandit -r backend/ -ll

  safety-audit:
    name: 🔐 Safety Python Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Safety
        run: |
          pip install safety
          pip install -r backend/requirements.txt
      - name: Run safety check
        run: safety check --full-report > safety-report.txt
      - name: Upload safety report
        uses: actions/upload-artifact@v4
        with:
          name: backend-safety-report
          path: safety-report.txt

  npm-audit:
    name: 📦 npm Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm audit --audit-level=moderate

  update-dependencies:
    name: 🧰 Update & Audit Frontend Deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
        working-directory: frontend

      - name: Run security audit
        run: pnpm audit --json > security-audit.json || true
        working-directory: frontend

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-security-audit
          path: frontend/security-audit.json

      - name: Fail on high severity CVEs
        run: |
          if grep -q '"severity": "high"' frontend/security-audit.json; then
            echo "❌ High severity vulnerabilities detected!"
            exit 1
          fi

      - name: Check for updates
        run: npx npm-check-updates -u
        working-directory: frontend

      - name: Install updated dependencies
        run: pnpm install
        working-directory: frontend

      - name: Type check
        run: pnpm run typecheck || echo "⚠️ Type check failed, continuing"
        working-directory: frontend

      - name: Lint check
        run: pnpm run lint || echo "⚠️ Linting failed, continuing"
        working-directory: frontend

      - name: Build application
        run: pnpm run build
        working-directory: frontend

      - name: Run tests
        run: pnpm run test:unit || echo "⚠️ Tests failed, continuing"
        working-directory: frontend

      - name: Prepare PR body
        run: |
          echo "This PR updates project dependencies to their latest versions." > pr-body.txt
          echo "" >> pr-body.txt
          echo "## Changes" >> pr-body.txt
          echo "- Updated frontend dependencies" >> pr-body.txt
          echo "- Re-ran security audit" >> pr-body.txt
          echo "" >> pr-body.txt
          echo "## Security Audit Summary" >> pr-body.txt
          cat frontend/security-audit.json >> pr-body.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update frontend dependencies'
          title: 'chore: update frontend dependencies'
          body-path: pr-body.txt
          branch: 'chore/dependency-updates'
          base: 'develop'
          labels: 'dependencies, automated pr'
